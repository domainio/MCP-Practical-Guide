services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  mcp-server:
    build: 
      context: .
      dockerfile: ./Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8000
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    working_dir: /app
    command: python server.py
    deploy:
      replicas: 3
    expose:
      - "8000"

  # Nginx load balancer
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - mcp-server
    restart: unless-stopped



volumes:
  redis_data: 